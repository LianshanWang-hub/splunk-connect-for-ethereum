name: CI

on: [push]

jobs:
    build:
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/splunkdlt/connect-ci@sha256:10e6353d1bedecfb5a0100053ad0f0def1d2437e9ef79d0c3404ee877db5cad8
        steps:
            - uses: actions/checkout@v2
            - name: Build ethlogger CLI
              run: |
                  yarn install --frozen-lockfile
                  yarn build
    docker-image:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Login to docker registry
              run: docker login ghcr.io -u $GHCR_USER -p $GHCR_PAT
              env:
                  GHCR_USER: ${{secrets.GHCR_USER}}
                  GHCR_PAT: ${{secrets.GHCR_PAT}}
            - name: Pull latest pre-release image
              run: docker pull ghcr.io/splunkdlt/ethlogger-pre:latest
            - name: Build docker image
              run: docker build -t ghcr.io/splunkdlt/ethlogger-pre:commit-$GITHUB_SHA . --cache-from ghcr.io/splunkdlt/ethlogger-pre:latest
            - name: Publish docker image
              run: docker push ghcr.io/splunkdlt/ethlogger-pre:commit-$GITHUB_SHA
            - name: Publish docker image
              if: github.ref == 'refs/heads/master'
              run: |
                  docker tag ghcr.io/splunkdlt/ethlogger-pre:commit-$GITHUB_SHA ghcr.io/splunkdlt/ethlogger-pre:latest
                  docker push ghcr.io/splunkdlt/ethlogger-pre:latest
    unit-tests:
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/splunkdlt/connect-ci@sha256:10e6353d1bedecfb5a0100053ad0f0def1d2437e9ef79d0c3404ee877db5cad8
        steps:
            - uses: actions/checkout@v2
            - name: Run unit tests and linter
              run: |
                  yarn install --frozen-lockfile
                  yarn build
                  yarn test --verbose
              env:
                  CI: true
    check-format:
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/splunkdlt/connect-ci@sha256:10e6353d1bedecfb5a0100053ad0f0def1d2437e9ef79d0c3404ee877db5cad8
        steps:
            - uses: actions/checkout@v2
            - name: Check code format
              run: |
                  yarn install --frozen-lockfile
                  yarn format:verify
              env:
                  CI: true
    check-generated-files:
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/splunkdlt/connect-ci@sha256:10e6353d1bedecfb5a0100053ad0f0def1d2437e9ef79d0c3404ee877db5cad8
        steps:
            - uses: actions/checkout@v2
            - name: Check if generated files are up-to-date
              run: |
                  yarn install --frozen-lockfile
                  yarn build
                  yarn generate:all
                  echo "Checking if generated files are up-to-date"
                  git diff --exit-code
              env:
                  CI: true
    trigger-release:
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/splunkdlt/connect-ci@sha256:10e6353d1bedecfb5a0100053ad0f0def1d2437e9ef79d0c3404ee877db5cad8
        needs:
            - build
            - docker-image
            - unit-tests
            - check-format
            - check-generated-files
        if: github.ref == 'refs/heads/master'
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Semantic release
              run: |
                  yarn install --frozen-lockfile
                  yarn semantic-release
                  docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
                  yarn ts-node scripts/postrelease.ts
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
